@mixin shield($width: 100px, $height: 100px, $color:red){
  position: relative;
  width: $width;
  height: $height;
  /*real dimensions*/
  $shielddeg: 10px;
  $rwidth: $width - 2*10px;
  $rheight: $height - $height/5;
  &:before {
    content: "";
    display: block;
    position: absolute;
    border-style: solid;
    border-color: $color transparent transparent transparent;
    border-width: $rheight $shielddeg 0;
    width: $rwidth;
  }
  &:after {
    content: "";
    display: block;
    position: absolute;
    top: $rheight;
    z-index: 1;
    border-style: solid;
    border-color: $color transparent transparent transparent;
    border-width: $rheight/5 $rwidth/2 0;
    margin-left: $shielddeg;
    width: 0;
  }
}//
@mixin prepare_shield($containerwidth: 200px, $containerheight: 200px){
  $outerwidth:$containerwidth * .6;
  $outerheight:$containerheight * .5;
  margin-top: ($containerheight - $outerheight) *.5;
  margin-left: ($containerwidth - $outerwidth) *.5;
  @include shield($outerwidth, $outerheight, #2E66B2);
  span{
    $innerwidth: $outerwidth - 10px*2;
    $innerheight: $outerheight - 10px*2;
    @include shield($innerwidth, $innerheight, #FF5C2B);
    z-index: 2;
    left: 10px;
    top: 10px;
  }
}

@mixin diamond($width: 100px, $height:100px, $color:red){
  @include position(relative, auto, auto, auto, auto, $width, $height);
  &:before{
    content:'';
    @include position(absolute, auto, auto, auto, 0, 0, 0);
    border-style: solid;
    border-color: transparent transparent $color transparent;
    border-width: 0 $width/2 $height/2 $width/2;
    z-index: 1;
  }
  &:after{
    content:'';
    @include position(absolute, $height/2, auto, auto, 0, 0, 0);
    border-style: solid;
    border-color: $color transparent transparent transparent;
    border-width: $height/2 $width/2 0 $width/2;
    z-index: 1;
  }
}
@mixin prepare_flatdiamond($containerwidth: 200px, $containerheight: 200px){
  $outerwidth:$containerwidth * .8;
  $outerheight:$containerheight * .6;
  margin-top: ($containerheight - $outerheight) *.5;
  margin-left: ($containerwidth - $outerwidth) *.5;
  @include diamond($outerwidth, $outerheight, #2E66B2);
  span{
    $innerwidth: $outerwidth - 10px*2;
    $innerheight: $outerheight - 10px*2;
    @include diamond($innerwidth, $innerheight, #FF5C2B);
    z-index: 2;
    left: 10px;
    top: 10px;
  }
}
@mixin prepare_diamond($containerwidth: 200px, $containerheight: 200px){
  $outerwidth:$containerwidth * .6;
  $outerheight:$containerheight * .8;
  margin-top: ($containerheight - $outerheight) *.5;
  margin-left: ($containerwidth - $outerwidth) *.5;
  @include diamond($outerwidth, $outerheight, #2E66B2);
  span{
    $innerwidth: $outerwidth - 10px*2;
    $innerheight: $outerheight - 10px*2;
    @include diamond($innerwidth, $innerheight, #FF5C2B);
    z-index: 2;
    left: 10px;
    top: 10px;
  }
}
@mixin darrow($width: 100px, $height:100px, $color:red){
  position: relative;
  @include position(relative, auto, auto, auto, auto, $width, $height);
  &:before{
    content:'';
    @include position(absolute, auto, auto, auto, auto);
    display: block;
    width: 0; 
    height: 0; 
    border-style: solid;
    border-color: $color transparent transparent transparent;
    border-width: $height  $width/2 0 $width/2;
  }
}
@mixin prepare_darrow($containerwidth: 200px, $containerheight: 200px){
  $cossixty:.86;/*math doesnt seem to work with scout*/
  $scale: .7; /*change this to affect total size*/
  $outerwidth:$containerwidth * $scale;
  $outerheight:$containerheight * $scale * $cossixty; /*makes equilateral tri*/
  margin-top: ($containerheight - $outerheight) * .6;
  margin-left: ($containerwidth - $outerwidth) *.5;
  @include darrow($outerwidth, $outerheight, #2E66B2);
  span{
    $tanthirty: .57;
    display: block;
    $innerwidth: $outerwidth - 10px*2;
    $innerheight: $outerheight - 10px*2;
    @include darrow($innerwidth, $innerheight, #FF5C2B);
    z-index: 2;
    left: 10px;
    top: 10px * $tanthirty;
  }
}
@mixin uarrow($width: 100px, $height:100px, $color:red){
  position: relative;
  @include position(absolute, 50%, auto, auto, auto, $width, $height);
  &:before{
    content:'';
    @include position(absolute, auto, auto, auto, auto);
    display: block;
    width: 0; 
    height: 0; 
    border-style: solid;
    border-color:transparent transparent $color transparent;
    border-width: 0  $width/2 $height $width/2;
  }
}
@mixin prepare_uarrow($containerwidth: 200px, $containerheight: 200px){
  $cossixty:.86;/*math doesnt seem to work with scout*/
  $scale: .7; /*change this to affect total size*/
  $outerwidth:$containerwidth * $scale;
  $outerheight:$containerheight * $scale * $cossixty; /*makes equilateral tri*/
  margin-top: ($containerheight - $outerheight) * -.8;
  margin-left: ($containerwidth - $outerwidth) *.5;
  @include uarrow($outerwidth, $outerheight, #2E66B2);
  span{
    display: block;
    $innerwidth: $outerwidth - 10px*2;
    $innerheight: $outerheight - 10px*2;
    @include uarrow($innerwidth, $innerheight, #FF5C2B);
    z-index: 2;
    left: 10px;
    margin-top: $innerheight * -.5;
  } 
}
@mixin star{
 margin: 50px 0; 
 @include position(relative, auto, auto, auto, auto, 0, 0);
 display: block; 
 color: red; 
 border-style: solid;
 border-color: transparent transparent red transparent;
 border-width: 0 100px 70px 100px;
 @include transform(rotate(35deg));
 &:before{
  content: '';
  display: block;
  border-style: solid;
  border-color: transparent transparent red transparent;
  border-width: 0 30px 80px 30px;
  @include position(absolute, -45px, auto, auto, -65px, 0, 0); 
  @include transform(rotate(-35deg));
 }
 &:after{
   content: '';
   display: block; 
   color: red;  
   border-style: solid;
   border-color: transparent transparent red transparent;
   border-width: 0 100px 70px 100px;
   @include position(absolute, 3px, auto, auto, -105px, 0, 0); 
   @include transform(rotate(-70deg));
 }
}
@mixin circle{
  width: 100px; 
  height: 100px; 
  background: red;
  @include border-radius(50px);
}
@mixin flatcircle{
  width: 200px; 
  height: 100px; 
  background: red;
  @include border-radius(50%);
}
@mixin national{
  @include position(relative, auto, auto, auto, auto, 100px, 100px);
  &:before, &:after{
    content:'';
    @include transform(skew(-30deg));
  }
  &:before{
    @include position(absolute, auto, auto, auto, 0, 46px, 100px);
    @include border-radius(5px 0 0 5px);
    background: red;
  }
  &:after{
    @include position(absolute, auto, 0, auto, auto, 46px, 100px);
    @include border-radius( 0 5px 5px 0);
    background: red;
  }
}
@mixin badge{
  background: transparent; 
  @include position(relative, auto, auto, auto, auto, 100px, 55px);
  &:before, &:after{
    content:'';
  }
  &:before{
    @include position(absolute, -25px, auto, auto, 0, 0, 0);
    border-style: solid;
    border-color: transparent transparent red transparent;
    border-width: 0 50px 25px 50px;
  }
  &:after{
    @include position(absolute, auto, auto, 0px, 0, 0, 0);
    border-style: solid;
    border-color: red transparent transparent transparent;
    border-width: 55px 50px 0 50px;
  }
}
@mixin inning{
  border-style: solid; 
  border-color: transparent transparent red transparent; 
  border-width: 0 25px 25px 25px;
  @include position(relative, auto, auto, auto, auto, 50px, 0);
  margin: 20px 0 50px 0;
  &:after{
    content: ""; 
    @include position(absolute, 25px, auto, auto, -25px, 0,0);
    border-style: solid; 
    border-color: red transparent transparent transparent; 
    border-width: 70px 50px 0 50px;
  }
}
@mixin bolt{
  background: transparent;
  @include position(relative, auto, auto, auto, auto, 100px, 100px);
  &:before{
    content:'';
    background: red;
    @include position(absolute, auto, auto, auto, auto, 80px, 100px);
    @include transform(skew(-30deg));
  }
  &:after{
    content:'';
    @include position(absolute, auto, auto, -100px, -10px, 0, 0);
    @include transform(skew(-20deg));
    border-top: 125px solid red; 
    border-right: 100px solid transparent;
  }
}
@mixin hexagon{
  background: red; 
  @include position(relative, auto, auto, auto, auto, 100px, 55px);
  &:before, &:after{
    content:'';
  }
  &:before{
    @include position(absolute, -25px, auto, auto, 0, 0, 0);
    border-style: solid;
    border-color: transparent transparent red transparent;
    border-width: 0 50px 25px 50px;
  }
  &:after{
    @include position(absolute, auto, auto, -25px, 0, 0, 0);
    border-style: solid;
    border-color: red transparent transparent transparent;
    border-width: 25px 50px 0 50px;
  }
}
@mixin tapestry{
  background: red; 
  @include position(relative, auto, auto, auto, auto, 100px, 100px);
  &:before, &:after{
    content: '';
    border-style: solid; 
    border-color: transparent transparent red transparent; 
    border-width: 0 40px 70px 40px;
  }
  &:before{
    @include position(absolute, 70px,auto,auto, -23px);
    @include transform(rotate(-150deg));
  }
  &:after{
    @include position(absolute, 70px, -23px,auto, auto);
    @include transform(rotate(150deg));
  }
}
@mixin ribbon{
  background: red; 
  @include position(relative, auto, auto, auto, auto, 100px, 100px);
  @include border-radius(50px);
  &:before, &:after{
    content: '';
    border-style: solid; 
    border-color: transparent transparent red transparent; 
    border-width: 0 40px 70px 40px;
  }
  &:before{
    @include position(absolute, 70px,auto,auto, -10px);
    @include transform(rotate(-140deg));
  }
  &:after{
    @include position(absolute, 70px,-10px,auto, auto);
    @include transform(rotate(140deg));
  }
}